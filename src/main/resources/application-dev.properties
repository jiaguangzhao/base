server.port=80
spring.application.name=base

spring.datasource.hikari.connection-test-query=SELECT 1

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/mysql?useSSL=false&useUnicode=true&characterEncoding=UTF8&serverTimezone=GMT
spring.datasource.username=root
spring.datasource.password=Xiaozhao@888
spring.datasource.type=com.zaxxer.hikari.HikariDataSource

mybatis-plus.type-aliases-package=com.example.base.model.dto
mybatis-plus.mapper-locations=classpath:mappers/mysql/*Mapper.xml
mybatis-plus.config-location=classpath:mybatis-config.xml

spring.quartz.job-store-type=memory
spring.quartz.jdbc.initialize-schema=never
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.scheduler.instanceName=BaseQuartz
spring.quartz.properties.org.quartz.scheduler.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.scheduler.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.scheduler.jobStore.useProperties=false
spring.quartz.properties.org.quartz.scheduler.jobStore.tablePrefix=qrtz_
spring.quartz.properties.org.quartz.scheduler.jobStore.misfireThreshold=6000
spring.quartz.properties.org.quartz.scheduler.jobStore.isClustered=false
spring.quartz.properties.org.quartz.scheduler.jobStore.clusterCheckinInterval=5000
spring.quartz.properties.org.quartz.scheduler.jobStore.acquireTriggersWithinLock=true
spring.quartz.properties.org.quartz.scheduler.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.scheduler.threadPool.threadCount=10
spring.quartz.properties.org.quartz.scheduler.threadPool.threadPriority=5
spring.quartz.properties.org.quartz.scheduler.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true

# 启用或禁用 flyway
spring.flyway.enabled=false
# flyway 的 clean 命令会删除指定 schema 下的所有 table, 生产务必禁掉。
spring.flyway.clean-disabled=false
# SQL 脚本的目录,多个路径使用逗号分隔 默认值 classpath:db/migration
spring.flyway.locations=classpath:db/migration/prd/mysql

#  metadata 版本控制信息表 默认 flyway_schema_history
spring.flyway.table=flyway_schema_history
# 如果没有 flyway_schema_history 这个 metadata 表， 在执行 flyway migrate 命令之前, 必须先执行 flyway baseline 命令
# 设置为 true 后 flyway 将在需要 baseline 的时候, 自动执行一次 baseline。
spring.flyway.baseline-on-migrate=false
spring.flyway.baseline-version=1
# 指定 baseline 的版本号,默认值为 1, 低于该版本号的 SQL 文件, migrate 时会被忽略
spring.flyway.encoding=UTF-8
# 是否允许不按顺序迁移 开发建议 true  生产建议 false
spring.flyway.out-of-order=false
# 执行迁移时是否自动调用验证   当你的 版本不符合逻辑 比如 你先执行了 DML 而没有 对应的DDL 会抛出异常
spring.flyway.validate-on-migrate=true


github.url=https://api.github.com