server.port=80

spring.boot.admin.client.url=http://localhost:9101

spring.datasource.hikari.connection-test-query=SELECT 1

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://mysql.test.baiwang-inner.com:3306/front_lzlj?useSSL=false&useUnicode=true&characterEncoding=UTF8&serverTimezone=GMT
spring.datasource.username=front_lzlj
spring.datasource.password=front_lzlj
spring.datasource.type=com.zaxxer.hikari.HikariDataSource

mybatis-plus.mapper-locations=classpath:mappers/mysql/*Mapper.xml

spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=quartzScheduler
spring.quartz.auto-startup=true
spring.quartz.startup-delay=0s
spring.quartz.wait-for-jobs-to-complete-on-shutdown=false
spring.quartz.overwrite-existing-jobs=false
spring.quartz.jdbc.initialize-schema=never
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.scheduler.instanceName=BaseQuartz
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.useProperties=false
spring.quartz.properties.org.quartz.jobStore.tablePrefix=qrtz_
spring.quartz.properties.org.quartz.jobStore.misfireThreshold=6000
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=5000
spring.quartz.properties.org.quartz.jobStore.acquireTriggersWithinLock=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=10
spring.quartz.properties.org.quartz.threadPool.threadPriority=5
spring.quartz.properties.org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true

spring.quartz.properties.org.quartz.triggerListener.NAME.class = com.example.base.aop.FillTraceIdTriggerListener
#spring.quartz.properties.org.quartz.jobListener.NAME.class = com.example.base.listener.DemoJobListener

# 启用或禁用 flyway
spring.flyway.enabled=false
# flyway 的 clean 命令会删除指定 schema 下的所有 table, 生产务必禁掉。
spring.flyway.clean-disabled=false
# SQL 脚本的目录,多个路径使用逗号分隔 默认值 classpath:db/migration
spring.flyway.locations=classpath:db/migration/pre/mysql

#  metadata 版本控制信息表 默认 flyway_schema_history
spring.flyway.table=flyway_schema_history
# 如果没有 flyway_schema_history 这个 metadata 表， 在执行 flyway migrate 命令之前, 必须先执行 flyway baseline 命令
# 设置为 true 后 flyway 将在需要 baseline 的时候, 自动执行一次 baseline。
spring.flyway.baseline-on-migrate=false
spring.flyway.baseline-version=1
# 指定 baseline 的版本号,默认值为 1, 低于该版本号的 SQL 文件, migrate 时会被忽略
spring.flyway.encoding=UTF-8
# 是否允许不按顺序迁移 开发建议 true  生产建议 false
spring.flyway.out-of-order=false
# 执行迁移时是否自动调用验证   当你的 版本不符合逻辑 比如 你先执行了 DML 而没有 对应的DDL 会抛出异常
spring.flyway.validate-on-migrate=true

spring.cache.type=ehcache
#spring.cache.type=redis


xxl.job.login.username=admin
xxl.job.login.password=123456
xxl.job.admin.addresses=http://localhost:8080/xxl-job-admin
xxl.job.executor.appName=xxl-job-executor-sample
xxl.job.executor.address=
xxl.job.executor.ip=127.0.0.1
xxl.job.executor.port=9999
xxl.job.executor.logpath=/data/applogs/xxl-job/jobhandler
xxl.job.executor.logretentiondays=30
xxl.job.accessToken=
xxl.job.i18n=


github.url=https://api.github.com


# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=zwqh
# 链接超时时间 单位 ms（毫秒）
spring.redis.timeout=3000
################ Redis 线程池设置 ##############
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0

#pagehelper.dialect=com.github.pagehelper.dialect.helper.MySqlDialect

flowable.