<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径 -->
<!--	<springProperty scope="context" name="LOG_SYSTEM" source="LOG_SYSTEM"/>-->
<!--	<springProperty scope="context" name="LOG_HOME" source="LOG_HOME"/>-->
	<property name="LOG_SYSTEM" value="front-base" />
	<property name="LOG_HOME" value="${APP_HOME}/logs/front-base" />

	<conversionRule conversionWord="msg" converterClass="com.example.base.aop.LogbackMessageConverter" />

	<!-- 控制台输出 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level ${LOG_SYSTEM} [%logger{100}_%M] [%X{traceId}] - %msg%n</pattern>
		</encoder>
	</appender>
	<!-- 按照每天生成日志文件 -->
	<appender name="serviceAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/${LOG_SYSTEM}-service.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/${LOG_SYSTEM}-service-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            	<maxFileSize>500MB</maxFileSize>
        	</timeBasedFileNamingAndTriggeringPolicy>
			<!--日志文件保留天数 -->
			<MaxHistory>15</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level ${LOG_SYSTEM} [%logger{100}_%M] - %msg%n</pattern>
		</encoder>
	</appender>
	<!-- 按照每天生成日志文件 -->
	<appender name="daoAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/${LOG_SYSTEM}-dao.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/${LOG_SYSTEM}-dao-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            	<maxFileSize>500MB</maxFileSize>
        	</timeBasedFileNamingAndTriggeringPolicy>
			<!--日志文件保留天数 -->
			<MaxHistory>15</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level ${LOG_SYSTEM} [%logger{100}_%M] - %msg%n</pattern>
		</encoder>
	</appender>
	<!-- 按照每天生成日志文件 -->
	<appender name="controllerAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/${LOG_SYSTEM}-controller.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/${LOG_SYSTEM}-controller-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            	<maxFileSize>500MB</maxFileSize>
        	</timeBasedFileNamingAndTriggeringPolicy>
			<!--日志文件保留天数 -->
			<MaxHistory>15</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level ${LOG_SYSTEM} [%logger{100}_%M] - %msg%n</pattern>
		</encoder>
	</appender>
	<!-- 按照每天生成日志文件 -->
	<appender name="integrationAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/${LOG_SYSTEM}-integration.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/${LOG_SYSTEM}-integration-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            	<maxFileSize>500MB</maxFileSize>
        	</timeBasedFileNamingAndTriggeringPolicy>
			<!--日志文件保留天数 -->
			<MaxHistory>15</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level ${LOG_SYSTEM} [%logger{100}_%M] - %msg%n</pattern>
		</encoder>
	</appender>
	<!-- 按照每天生成日志文件 -->
	<appender name="commonAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/${LOG_SYSTEM}-common.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/${LOG_SYSTEM}-common-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            	<maxFileSize>500MB</maxFileSize>
        	</timeBasedFileNamingAndTriggeringPolicy>
			<!--日志文件保留天数 -->
			<MaxHistory>15</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level ${LOG_SYSTEM} [%logger{100}_%M] - %msg%n</pattern>
		</encoder>
	</appender>
	<appender name="errorAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/error-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            	<maxFileSize>500MB</maxFileSize>
        	</timeBasedFileNamingAndTriggeringPolicy>
			<!--日志文件保留天数 -->
			<MaxHistory>15</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level ${LOG_SYSTEM} - %msg%n
			</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter>
	</appender>
	<appender name="defaultAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/default.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/default-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            	<maxFileSize>500MB</maxFileSize>
        	</timeBasedFileNamingAndTriggeringPolicy>
			<!--日志文件保留天数 -->
			<MaxHistory>15</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level ${LOG_SYSTEM} [%logger{100}_%M] - %msg%n</pattern>
		</encoder>
	</appender>
	<!-- 按照每天生成日志文件 -->
	<appender name="digestAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/digest.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<FileNamePattern>${LOG_HOME}/digest-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            	<maxFileSize>500MB</maxFileSize>
        	</timeBasedFileNamingAndTriggeringPolicy>
			<!--日志文件保留天数 -->
			<MaxHistory>15</MaxHistory>
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<!--格式化输出：%d表示日期，%thread表示线程名，%level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %level ${LOG_SYSTEM} %msg%n</pattern>
		</encoder>
	</appender>
	<logger name="com.example.base.web" level="INFO" additivity="false">
		<appender-ref ref="controllerAppender" />
		<appender-ref ref="STDOUT" />
	</logger>

	<logger name="com.example.base.service" level="INFO" additivity="false">
		<appender-ref ref="serviceAppender" />
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="com.example.base.integration" level="INFO" additivity="false">
		<appender-ref ref="integrationAppender" />
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="com.baiwang.bop.client.impl.PostLogin" level="INFO" additivity="false">
		<appender-ref ref="integrationAppender" />
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="com.baiwang.bop.client.impl.BopRestClient" level="INFO" additivity="false">
		<appender-ref ref="integrationAppender" />
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="com.example.base.dao" level="DEBUG" additivity="false">
		<appender-ref ref="daoAppender" />
		<appender-ref ref="STDOUT" />
	</logger>

	<logger name="com.example.base.dao.InvoiceMapper.selectInvoiceTemp" level="INFO" additivity="false">
		<appender-ref ref="daoAppender" />
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="com.example.base.dao.QCloudsmsInformationMapper.selectQCloundsmsInformation" level="INFO" additivity="false">
		<appender-ref ref="daoAppender" />
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="com.example.base.common" level="INFO" additivity="false">
		<appender-ref ref="commonAppender" />
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="com.baiwang.cloud.common.aop.ServiceDigestAop" level="INFO" additivity="false">
		<appender-ref ref="digestAppender" />
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="com.baiwang.cloud.common.exception.handler" level="INFO" additivity="false">
		<appender-ref ref="errorAppender" />
		<appender-ref ref="STDOUT" />
	</logger>
	<logger name="com.example.base.web.advice" level="INFO" additivity="false">
		<appender-ref ref="errorAppender" />
		<appender-ref ref="STDOUT" />
	</logger>

	<!-- 日志输出级别 -->
	<root level="INFO">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="defaultAppender" />
		<appender-ref ref="errorAppender" />
		<appender-ref ref="integrationAppender" />
	</root>
</configuration>
